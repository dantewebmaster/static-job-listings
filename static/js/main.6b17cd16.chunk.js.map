{"version":3,"sources":["styles/variables.ts","components/JobCard/styles.ts","components/Chip/styles.ts","images/icon-remove.svg","components/Chip/index.tsx","components/JobCard/index.tsx","helpers/array.ts","App.tsx","images/bg-header-desktop.svg","styles/global.ts","index.tsx"],"names":["colors","sizes","small","medium","large","text","CardContainer","styled","div","highlighted","ChipContainer","Chip","label","onClose","onSelect","onClick","tag","className","type","src","IconRemove","alt","JobCard","job","onFilter","isHighlighted","featured","new","tags","languages","tools","logo","company","href","position","postedAt","contract","location","map","App","useState","jobsList","setJobsList","filter","setFilter","addFilter","newFilter","uniqFilters","value","index","array","indexOf","useEffect","filteredJobs","length","jobsData","forEach","some","item","includes","push","addExtraMargin","id","chip","currentFilter","removeFilter","GlobalStyle","createGlobalStyle","HeaderBg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b17cd16.chunk.js","sourcesContent":["export const colors = {\n  primary: '#64baba',\n  grayShadow: '#d7d7d7',\n}\n\nexport const sizes = {\n  spacing: {\n    small: 8,\n    medium: 16,\n    large: 24,\n  },\n  fonts: {\n    small: 12,\n    text: 14,\n  }\n}\n","import styled from 'styled-components';\nimport { colors, sizes } from '../../styles/variables';\n\ninterface StyledCardProps {\n  highlighted: boolean;\n}\n\nexport const CardContainer = styled.div<StyledCardProps>`\n  background: #fff;\n  box-shadow: 0 5px 16px ${colors.grayShadow};\n  border-radius: 4px;\n  display: flex;\n  padding: ${sizes.spacing.medium}px ${sizes.spacing.medium * 2}px;\n  margin-bottom: ${sizes.spacing.large}px;\n  align-items: center;\n\n  border-left: 4px solid ${({ highlighted }) =>\n    highlighted ? `${colors.primary}` : 'transparent'};\n\n  .logo {\n    border-radius: 100%;\n    width: 60px;\n    height: 60px;\n  }\n\n  .card-header {\n    display: flex;\n    align-items: center;\n\n    .company {\n      margin-right: ${sizes.spacing.large}px;\n      color: #666;\n      font-size: 14px;\n    }\n  }\n\n  .position {\n    font-size: 14px;\n    margin: 0 0 ${sizes.spacing.small}px;\n\n    a {\n      color: #333;\n      text-decoration: none;\n\n      &:hover {\n        color: ${colors.primary};\n      }\n    }\n  }\n\n  .card-infos {\n    flex: 1;\n    margin-left: ${sizes.spacing.large}px;\n  }\n\n  .badges {\n    span {\n      background: #333;\n      padding: 4px 8px;\n      border-radius: 30px;\n      margin-right: ${sizes.spacing.small}px;\n      text-transform: uppercase;\n      font-size: 10px;\n      color: #fff;\n\n      &.new {\n        background: ${colors.primary};\n      }\n    }\n  }\n\n  .job-tags {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    div:hover {\n      background-color: ${colors.primary};\n      color: #fff;\n      cursor: pointer;\n    }\n  }\n\n  .extra-infos span {\n    font-size: ${sizes.fonts.small}px;\n    color: #999;\n    margin-right: ${sizes.spacing.medium * 2}px;\n    position: relative;\n\n    /* dot divider */\n    &:after {\n      content: '';\n      background: #999;\n      display: inline-block;\n      position: absolute;\n      right: -16px;\n      top: 5px;\n      width: 3px;\n      height: 3px;\n      border-radius: 100%;\n    }\n    &:last-child::after {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    margin-bottom: 48px;\n    padding: 16px;\n\n    .card-infos {\n      margin: 16px 0 16px 0;\n      width: 100%;\n      border-bottom: 1px solid #ddd;\n      padding-bottom: 16px;\n    }\n\n    .logo {\n      margin-top: -48px;\n    }\n\n    .extra-infos span {\n      margin-right: 14px;\n\n      &:after {\n        right: -8px;\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../styles/variables';\n\nexport const ChipContainer = styled.div`\n  background: #f1f1f1;\n  margin-right: 8px;\n  color: #666;\n  font-size: 12px;\n  border-radius: 2px;\n  width: auto;\n  display: inline-block;\n  overflow: hidden;\n  height: 32px;\n\n  span {\n    padding: 12px;\n    line-height: 34px;\n  }\n\n  button.remove {\n    height: 32px;\n    width: 32px;\n    cursor: pointer;\n    border: 0;\n    background-color: ${colors.primary};\n    color: #fff;\n    transition: background-color 0.2s ease;\n    outline: none;\n\n    img {\n      width: 10px;\n    }\n\n    &:hover {\n      background-color: #333;\n    }\n  }\n\n  @media (max-width: 768px) {\n    font-size: 10px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/icon-remove.70c075ce.svg\";","import { ChipContainer } from './styles';\nimport IconRemove from '../../images/icon-remove.svg';\n\ninterface ChipProps {\n  label: string;\n  onClose?: (tag: string) => void;\n  onSelect?: (tag: string) => void;\n}\n\nexport default function Chip({ label, onClose, onSelect }: ChipProps) {\n  const handleClick = (tag: string) => {\n    if (onSelect) onSelect(tag);\n  };\n\n  return (\n    <ChipContainer onClick={() => handleClick(label)}>\n      <span>{label}</span>\n      {onClose && (\n        <button className=\"remove\" type=\"button\" onClick={() => onClose(label)}>\n          <img src={IconRemove} alt=\"remove\" />\n        </button>\n      )}\n    </ChipContainer>\n  );\n}\n","import { CardContainer } from './styles';\nimport { Job } from '../../models/job.interface';\nimport Chip from '../Chip';\n\nexport interface JobCardProps {\n  job: Job;\n  onFilter: (tag: string) => void;\n}\n\nexport default function JobCard({ job, onFilter }: JobCardProps) {\n  const isHighlighted = job.featured && job.new;\n  const tags = [...job.languages, ...job.tools];\n\n  return (\n    <CardContainer highlighted={isHighlighted}>\n      <img className=\"logo\" src={job.logo} alt={job.company} />\n      <div className=\"card-infos\">\n        <div className=\"card-header\">\n          <p className=\"company\">{job.company}</p>\n          <div className=\"badges\">\n            {job.new && <span className=\"badge new\">new</span>}\n            {job.featured && <span className=\"badge featured\">featured</span>}\n          </div>\n        </div>\n\n        <h1 className=\"position\">\n          <a href=\"#home\">{job.position}</a>\n        </h1>\n\n        <div className=\"extra-infos\">\n          <span className=\"time\">{job.postedAt}</span>\n          <span className=\"period\">{job.contract}</span>\n          <span className=\"location\">{job.location}</span>\n        </div>\n      </div>\n      <div className=\"job-tags\">\n        {tags.map((tag) => (\n          <Chip key={tag} label={tag} onSelect={() => onFilter(tag)} />\n        ))}\n      </div>\n    </CardContainer>\n  );\n}\n","export const uniq = (array: any[]) => array.filter(\n  (value, index, array) => array.indexOf(value) === index\n);\n\nexport const pullAll = (arr: any[], values: any[]) => arr.filter(a => !values.includes(a));\n","import { useEffect, useState } from 'react';\nimport { Job } from './models/job.interface';\nimport JobCard from './components/JobCard';\nimport Chip from './components/Chip';\nimport { uniq } from './helpers/array';\nimport jobsData from './data.json';\n\nexport default function App() {\n  const [jobsList, setJobsList] = useState<Job[]>([]);\n  const [filter, setFilter] = useState<string[]>([]);\n\n  useEffect(() => {\n    const filteredJobs: Job[] = [];\n\n    if (filter.length > 0) {\n      jobsData.forEach((job) => {\n        const tags = [...job.languages, ...job.tools];\n\n        const jobHasTag = tags.some((item) => filter.includes(item));\n\n        if (jobHasTag) {\n          filteredJobs.push(job);\n        }\n      });\n\n      setJobsList(filteredJobs);\n    } else {\n      setJobsList(jobsData);\n    }\n  }, [filter]);\n\n  function addFilter(tag: string) {\n    const newFilter = [...filter, tag];\n    const uniqFilters = uniq(newFilter);\n    setFilter(uniqFilters);\n  }\n\n  function removeFilter(tag: string) {\n    setFilter((currentFilter) => currentFilter.filter((item) => item !== tag));\n  }\n\n  function clearAllFilter() {\n    setFilter([]);\n  }\n\n  const addExtraMargin = filter.length > 0;\n\n  return (\n    <>\n      <header className=\"header\" id=\"home\">\n        {filter.length > 0 && (\n          <div className=\"filter\">\n            <div className=\"chips\">\n              {filter.map((tag) => (\n                <Chip\n                  key={tag}\n                  label={tag}\n                  onClose={(chip) => removeFilter(chip)}\n                />\n              ))}\n            </div>\n            <button\n              className=\"clear-all\"\n              type=\"button\"\n              onClick={clearAllFilter}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </header>\n      <div className={`container ${addExtraMargin && 'extra-margin-top'}`}>\n        {jobsList.map((item: Job) => (\n          <JobCard key={item.id} job={item} onFilter={addFilter} />\n        ))}\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bg-header-desktop.8694f466.svg\";","import { createGlobalStyle } from 'styled-components';\nimport { colors, sizes } from './variables'\nimport HeaderBg from '../images/bg-header-desktop.svg';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: Spartan, Helvetica, Sans-Serif;\n  }\n\n  .header {\n    background: teal url(${HeaderBg}) center no-repeat;\n    height: 100px;\n    width: 100%;\n    background-size: cover;\n    position: relative;\n    padding: 0 ${sizes.spacing.medium}px;\n  }\n\n  .filter {\n    background: #fff;\n    max-width: 1024px;\n    display: flex;\n    margin: 0 auto;\n    padding: 16px 32px;\n    border-radius: 4px;\n    box-shadow: 0 8px 16px ${colors.grayShadow};\n    transform: translateY(60px);\n\n    .chips {\n      flex: 1;\n    }\n  }\n\n  .container {\n    display: block;\n    max-width: 1068px;\n    margin: ${sizes.spacing.medium * 2}px auto;\n    padding: ${sizes.spacing.medium}px;\n  }\n\n  button {\n    border: 0;\n    background: transparent;\n    cursor: pointer;\n    color: ${colors.primary};\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  @media (max-width: 768px) {\n    .extra-margin-top {\n      margin-top: ${sizes.spacing.large * 5.5}px;\n    }\n\n    .filter {\n      padding: ${sizes.spacing.medium}px;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './styles/global';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}